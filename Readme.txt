Разработка программного обеспечения ЛТХ-БААС  ==
================================================
0. Введение
1. Задачи до проектирования
	1.1 Выбор языка программирования
	1.2 Методы тестирования ПО.
2. Выбор распиновки МК.
3. Выделение задач.





0 ВВЕДЕНИЕ
Данное ПО предназначенно для функционирования в разрабатываемом Щите пожарутушения.
ПО должно выполнять требования прописанные в ТЗ D:\Project\_LTX20385\documetation\Software

ПО должно работать на МК STM32F207IGT7


1. Задачи до проектирования:
	1.1 Выбор языка программирования:
		В связи с развитием технологий, на даннй момент доступны несколько различных языков программирования для реализации ПО на МК. Так как в ТЗ не определен явно язык для написания ПО, требуется рассмотреть основные языки программирования используемые на рынке труда для микроконтроллеров и произвести выбор.
		На данный момент представлены следующие языки программирования: 
			Ассемблер;
			Си;
			С++;
			Pascal;
			Basic;
			Граффические языки
		Кратко рассмотрим несколько из них

		1.1.1 Ассемблер.
			Ассеммблер представляет собой язык програмирования низкого уровня. Использование данного языка позволяет написать наиболее компакнтное и быстродействующее ПО. Однако из-за ограничения команд, сложности восприятия, и неинформативности, реализация сложных алгоритмов с помощью ассемблеров затруднительна и требует большого количества времени и ресурсов. 
		1.1.2 Си
			Язык программирования высокого уровня. Является де-факто стандартом разработки под МК. Из плюсов можно отметить:
				Простоту реализации алгоритмов по сравнения с ассемблером
				Множество распространенных библиотек и примеров
				Опыт программирования на данном языке
			Из минусов: 
				Отсутсвие ООП


		1.1.3 Си++
			Являтся своего рода наследником языка Си. Одним из важнейших отличий является поддрежка ООП.
			Так же из плюсов можно отметить использование шаблонов, и перегрузки функций или аргументов.
			Минусы данного выбора является увеличенный порог вхождения, и невозможность использования различных стандартных функций, в связи с ограниченностью ресурсов МК.
		1.1.4 Остальные языки: Pascal, basic и различные графические 	языки довольно слабо распространены на рынке, имеют мало поддерживаемых библиотек, а также у нас отсутствуют под них компиляторы. РАссматривать данные языки не имеет смысла.

		1.1.5 В результате, на данный момент времени, наиболее подходящим языком является Чистый Си. Правильным решением, будет написать ПО на Си приближенном к ООП, а в последствии переписать на СИ++.

	1.2 Внедрение Юнит тестирования

		Одной из проблем существующей методики написания ПО у нас, я считаю слабое тестирование. Одним из методом устранения проблемы я вижу введение юнит тестов во время написания ПО.
		Однако для разработки во встраиваемых системах, написание тестов является довольно не развитой задачей. После анализа некоторого количества информации я решил останвить на реализации от MinUnit
		http://www.jera.com/techinfo/jtns/jtn002.html
		Либо же придется писать нечто самостоятельное. 
		Дальнейший анализ, будет проводиться на этапе написания ПО.

	1.3 В связи с частым изменением и сложностью написания ПО, мне кажется хорошим решением будет использование системы контроля версий. Наиболее популярной сейчас является GIT, Тем более у меня есть там аккаунт. 

2. Выбор распиновки МК.
	Исходя из занятых ног микроконтроллера, была выбрана распиновка. Распиновка указана в D:\Project\_LTX20385\SoftLow\LTVOT385.git\распиновка.xls

3. Выделение задач.
	Исходя из технического задания, ПО должно обеспечивать выполнение следующих задач:
	3.1 Обработка 30(35) ключей с подключенной обратной связью. 
	Одновременное включение max 3 ключа.
	Кратковременное включение до 5 ключей. Время работы ограниченно 120 с

	3.2 Обработка датчика давления Trafag с периодом ~1с.

	3.3 Обработка 5 концевых датчиков.

	3.4 Анализ состояния системы

	3.5 Информационный обмен.

	